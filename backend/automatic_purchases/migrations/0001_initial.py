# Generated by Django 5.0 on 2023-12-21 22:30

import django.contrib.auth.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=40, verbose_name="Название")),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Список категорий",
                "ordering": ("-name",),
            },
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("city", models.CharField(max_length=50, verbose_name="Город")),
                ("street", models.CharField(max_length=100, verbose_name="Улица")),
                (
                    "house",
                    models.CharField(blank=True, max_length=15, verbose_name="Дом"),
                ),
                (
                    "structure",
                    models.CharField(blank=True, max_length=15, verbose_name="Корпус"),
                ),
                (
                    "building",
                    models.CharField(
                        blank=True, max_length=15, verbose_name="Строение"
                    ),
                ),
                (
                    "apartment",
                    models.CharField(
                        blank=True, max_length=15, verbose_name="Квартира"
                    ),
                ),
                ("phone", models.CharField(max_length=20, verbose_name="Телефон")),
            ],
            options={
                "verbose_name": "Контакты пользователя",
                "verbose_name_plural": "Список контактов пользователя",
            },
        ),
        migrations.CreateModel(
            name="Parameter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=40, verbose_name="Название")),
            ],
            options={
                "verbose_name": "Имя параметра",
                "verbose_name_plural": "Список имен параметров",
                "ordering": ("-name",),
            },
        ),
        migrations.CreateModel(
            name="Shop",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="Название")),
                ("url", models.URLField(blank=True, null=True, verbose_name="Ссылка")),
                (
                    "state",
                    models.BooleanField(
                        default=True, verbose_name="статус получения заказов"
                    ),
                ),
            ],
            options={
                "verbose_name": "Магазин",
                "verbose_name_plural": "Список магазинов",
                "ordering": ("-name",),
            },
        ),
        migrations.CreateModel(
            name="UserContact",
            fields=[
                (
                    "user_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("shop", "Магазин"), ("buyer", "Покупатель")],
                        default="buyer",
                        max_length=5,
                        verbose_name="Тип пользователя",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Список пользователей",
                "ordering": ("email",),
            },
            bases=("auth.user",),
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ConfirmEmailToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="When was this token generated"
                    ),
                ),
                (
                    "key",
                    models.CharField(
                        db_index=True, max_length=64, unique=True, verbose_name="Key"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="confirm_email_tokens",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="The User which is associated to this password reset token",
                    ),
                ),
            ],
            options={
                "verbose_name": "Токен подтверждения Email",
                "verbose_name_plural": "Токены подтверждения Email",
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dt", models.DateTimeField(auto_now_add=True)),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("basket", "Статус корзины"),
                            ("new", "Новый"),
                            ("confirmed", "Подтвержден"),
                            ("assembled", "Собран"),
                            ("sent", "Отправлен"),
                            ("delivered", "Доставлен"),
                            ("canceled", "Отменен"),
                        ],
                        max_length=15,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="automatic_purchases.contact",
                        verbose_name="Контакт",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заказ",
                "verbose_name_plural": "Список заказ",
                "ordering": ("-dt",),
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=80, verbose_name="Название")),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="automatic_purchases.category",
                        verbose_name="Категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "Продукт",
                "verbose_name_plural": "Список продуктов",
                "ordering": ("-name",),
            },
        ),
        migrations.CreateModel(
            name="ProductInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "model",
                    models.CharField(blank=True, max_length=80, verbose_name="Модель"),
                ),
                ("external_id", models.PositiveIntegerField(verbose_name="Внешний ИД")),
                ("quantity", models.PositiveIntegerField(verbose_name="Количество")),
                ("price", models.PositiveIntegerField(verbose_name="Цена")),
                (
                    "price_rrc",
                    models.PositiveIntegerField(
                        verbose_name="Рекомендуемая розничная цена"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_infos",
                        to="automatic_purchases.product",
                        verbose_name="Продукт",
                    ),
                ),
                (
                    "shop",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_infos",
                        to="automatic_purchases.shop",
                        verbose_name="Магазин",
                    ),
                ),
            ],
            options={
                "verbose_name": "Информация о продукте",
                "verbose_name_plural": "Информационный список о продуктах",
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(verbose_name="Количество")),
                (
                    "order",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ordered_items",
                        to="automatic_purchases.order",
                        verbose_name="Заказ",
                    ),
                ),
                (
                    "product_info",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ordered_items",
                        to="automatic_purchases.productinfo",
                        verbose_name="Информация о продукте",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заказанная позиция",
                "verbose_name_plural": "Список заказанных позиций",
            },
        ),
        migrations.CreateModel(
            name="ProductParameter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=100, verbose_name="Значение")),
                (
                    "parameter",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_parameters",
                        to="automatic_purchases.parameter",
                        verbose_name="Параметр",
                    ),
                ),
                (
                    "product_info",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_parameters",
                        to="automatic_purchases.productinfo",
                        verbose_name="Информация о продукте",
                    ),
                ),
            ],
            options={
                "verbose_name": "Параметр",
                "verbose_name_plural": "Список параметров",
            },
        ),
        migrations.AddField(
            model_name="category",
            name="shops",
            field=models.ManyToManyField(
                blank=True,
                related_name="categories",
                to="automatic_purchases.shop",
                verbose_name="Магазины",
            ),
        ),
        migrations.AddField(
            model_name="shop",
            name="user",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="automatic_purchases.usercontact",
                verbose_name="Пользователь",
            ),
        ),
        migrations.AddField(
            model_name="contact",
            name="user",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="contacts",
                to="automatic_purchases.usercontact",
                verbose_name="Пользователь",
            ),
        ),
        migrations.AddConstraint(
            model_name="orderitem",
            constraint=models.UniqueConstraint(
                fields=("order_id", "product_info"), name="unique_order_item"
            ),
        ),
        migrations.AddConstraint(
            model_name="productparameter",
            constraint=models.UniqueConstraint(
                fields=("product_info", "parameter"), name="unique_product_parameter"
            ),
        ),
        migrations.AddConstraint(
            model_name="productinfo",
            constraint=models.UniqueConstraint(
                fields=("product", "shop", "external_id"), name="unique_product_info"
            ),
        ),
    ]
