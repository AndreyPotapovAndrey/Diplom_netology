# Регистрация пользователя
# Если явно не указываем тип пользователя, то он создаётся по-умолчанию с типом "buyer"
# То есть "покупатель"

POST http://localhost:8000/user/register
Content-Type: application/json

{
    "first_name": "Andrey",
    "last_name": "Potapov",
    "email": "andrey777@yandex.ru",
    "password": "qwer1234A",
    "position": 345345
}

###

# Подтверждение эл.почты пользователя ("token" берём из таблицы "automatic_purchases_confirmemailtoken" из колонки "key")

POST http://localhost:8000/user/register/confirm
Content-Type: application/json

{
  "email": "andrey777@yandex.ru",
  "token": "1b0a81c3e29a9fd9686c"
}

###

# Авторизация пользователя

POST http://localhost:8000/user/login
Content-Type: application/json

{
  "email": "andrey777@yandex.ru",
  "password": "qwer123"
}

###

# Регистрация пользователя с типом "shop"

POST http://localhost:8000/user/register
Content-Type: application/json

{
    "first_name": "Andy",
    "last_name": "Potapovsky",
    "email": "andy@yandex.ru",
    "password": "qwer1234A",
    "company": "PotapovskyDiamond",
    "position": 345346,
    "type": "shop"
}

###

# Авторизация пользователя (shop)

POST http://localhost:8000/user/login
Content-Type: application/json

{
  "email": "andy@yandex.ru",
  "password": "qwer1234A"
}

###

# Регистрация 3-го пользователя (Покупателя)

POST http://localhost:8000/user/register
Content-Type: application/json

{
    "first_name": "Andy_2",
    "last_name": "Potapovich",
    "email": "andy_2@yandex.ru",
    "password": "qwer1234A",
    "position": 345347
}

###

# Просмотреть информацию о пользователе
# Возвращается информация, соответствующая вставленному токену

GET http://localhost:8000/user/details
Content-Type: application/json
Authorization: Token b488210fa8ef1b9dc71fbbc3893807bc6126a807

###

# Изменение информации о юзере методом POST (3-й пользователь с почтой "andy_2@yandex.ru")

POST http://localhost:8000/user/details
Content-Type: application/json
Authorization: Token 4a64351ce0ec061a03d0128bc4bbab6340acab7a

{
    "first_name": "AndrOID",
    "last_name": "PotaP",
    "email": "a@a.ru",
    "password": "qwer777QWERy=ty",
    "position": 777
}

###

# Запрос (и проверка) токена для изменения пароля. Если токен есть,
# но ему больше 24-х часов, то он удаляется и заменяется новым.

POST http://localhost:8000/user/password_reset
Content-Type: application/json
Authorization: Token b488210fa8ef1b9dc71fbbc3893807bc6126a807

{
  "email":  "andrey777@yandex.ru"
}

###

# Запрос изменения пароля пользователя (Токен для изменения пароля приходит в таблицу
# "django_rest_passwordreset_resetpasswordtoken")
# после отправки запроса "POST http://localhost:8000/user/password_reset"

POST http://localhost.com:8000/user/password_reset/confirm
Content-Type: application/json
Authorization: Token ac280ce41a4c1b128ce6cea4e76b025ebe807652

{
  "email": "andrey777@yandex.ru",
  "password": "qwer123",
  "token": "07a540ed99bd05df59dcc8d6ba6b14feb86cc52a22aa7a8"
}

###

# Создать контакт (Контакт создаётся для юзера, токен которого указан)

POST http://localhost:8000/user/contact
Content-Type: application/json
Authorization: Token b488210fa8ef1b9dc71fbbc3893807bc6126a807

{   "city": "Moscow",
    "street": "Prophsouzniy street 40",
    "house": "Apartament 28",
    "structure": "2",
    "building": "1",
    "apartment": "123",
    "phone": "749564563242"
}

###

# Просмотреть контакт

GET http://localhost:8000/user/contact
Authorization: Token b488210fa8ef1b9dc71fbbc3893807bc6126a807

###

# Редактировать контакт методом PUT

# Пример запроса через "Terminal":

# curl --location --request PUT 'http://example.com:8000/user/contact'
#--header 'Authorization: Token b488210fa8ef1b9dc71fbbc3893807bc6126a807'
#--form 'city="St. Petersburg"'
#--form 'street="Nevsky Prospect"'
#--form 'house="Apartament 1"'
#--form 'structure="1"'
#--form 'building="1"'
#--form 'apartment="345"'
#--form 'id="2"'
#--form 'phone="+78125465421"'

PUT http://localhost:8000/user/contact
Content-Type: application/json
Authorization: Token b488210fa8ef1b9dc71fbbc3893807bc6126a807

{   "city": "St. Petersburg",
    "street": "Nevsky Prospect",
    "house": "Apartament 1",
    "structure": "1",
    "building": "1",
    "apartment": "123",
    "phone": "78125550055",
    "id": "3"
}

###

# Удалить контакт(-ы)

DELETE http://localhost:8000/user/contact
Content-Type: application/json
Authorization: Token b488210fa8ef1b9dc71fbbc3893807bc6126a807

{
    "items": "2,4"
}

###

# Показать список магазинов (list shops)

GET http://localhost:8000/shops
Authorization: Token b488210fa8ef1b9dc71fbbc3893807bc6126a807

###

# Искать товары

GET http://localhost:8000/products?shop_id=5&category_id=224
Authorization: Token b488210fa8ef1b9dc71fbbc3893807bc6126a807

###

# Добавляем товар(-ы) в корзину

POST http://localhost:8000/basket
Content-Type: application/x-www-form-urlencoded
Authorization: Token 77c27b89211c88e811ed613371a63cd7ecbb9d49

items=[{"product_info": 9, "quantity": 1}, {"product_info": 10, "quantity": 1}]

###

# Посмотреть, что в корзине

GET http://localhost:8000/basket
Content-Type: application/x-www-form-urlencoded
Authorization: Token 77c27b89211c88e811ed613371a63cd7ecbb9d49


###

# Редактировать количество товаров в корзине (Увеличиваем добавленные ранее товары на 9 штук)

PUT http://localhost:8000/basket
Content-Type: application/x-www-form-urlencoded
Authorization: Token 77c27b89211c88e811ed613371a63cd7ecbb9d49

items=[{"id": 1, "quantity": 10} ,{"id": 2, "quantity": 10}]

###

# Удаляем 1-ю и 2-ю позицию в корзине

DELETE http://localhost:8000/basket
Content-Type: application/x-www-form-urlencoded
Authorization: Token 77c27b89211c88e811ed613371a63cd7ecbb9d49

items=1,2

###

# Поссмотрееть  содержимое корзины

GET http://localhost:8000/order
Content-Type: application/x-www-form-urlencoded
Authorization: Token 77c27b89211c88e811ed613371a63cd7ecbb9d49

###

POST http://localhost:8000/order
Content-Type: application/x-www-form-urlencoded
Authorization: Token 77c27b89211c88e811ed613371a63cd7ecbb9d49

{
    "id": "1",
    ""
}

###

#  Обновить прайс партнёра (Репозитарий Нетологии)

POST http://localhost:8000/partner/update
Content-Type: application/x-www-form-urlencoded
Authorization: Token b488210fa8ef1b9dc71fbbc3893807bc6126a807

url=https://raw.githubusercontent.com/netology-code/pd-diplom/master/data/shop1.yaml

###

#  Обновить прайс партнёра (Мой удалённый репозитарий)

POST http://localhost:8000/partner/update
Content-Type: application/x-www-form-urlencoded
Authorization: Token d1885df031f6112f9a56dd0447a3914f06e6a1dd

url=https://raw.githubusercontent.com/AndreyPotapovAndrey/Diplom_netology/master/data/shop1.yaml

































